<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="shopMapper">

	<!-- 사업자 가게 테이블 -->
	<resultMap type="Shop" id="shopResultMap">
		<id property="shopNo" column="SHOP_NO"/>
		<result property="shopName" column="SHOP_NAME"/>
		<result property="shopShortAddr" column="SHOP_SHORT_ADDR"/>
		<result property="shopAddr" column="SHOP_ADDR"/>
		<result property="shopTarget" column="SHOP_TARGET"/>
		<result property="shopProduct" column="SHOP_PRODUCT"/>
		<result property="shopType" column="SHOP_TYPE"/>
		<result property="shopFileName" column="SHOP_FILENAME"/>
		<result property="shopFilePath" column="SHOP_FILEPATH"/>
		<result property="shopFileSize" column="SHOP_FILESIZE"/>
		<result property="shopUploadTime" column="SHOP_UPLOADTIME"/>
		<result property="shopPhone" column="SHOP_PHONE"/>
		<result property="shopParking" column="SHOP_PARKING_YN"/>
		<result property="shopMaxReserv" column="SHOP_MAX_RESERVATION"/>
		<result property="shopContent" column="SHOP_CONTENT"/>
		<result property="shopLat" column="SHOP_LAT"/>
		<result property="shopLng" column="SHOP_LNG"/>
		<result property="shopPoint" column="SHOP_POINT"/>
		<result property="shopPointYn" column="SHOP_POINT_YN"/>
		<result property="userNo" column="USER_NO"/>
		<result property="startTime" column="START_TIME"/>
		<result property="endTime" column="END_TIME"/>
		<result property="businessDay" column="BUSINESS_DAY"/>
		<result property="mainMenuNo" column="MAIN_MENU_NO"/>
		<result property="showShopYN" column="SHOW_SHOP_YN"/>
 		<result property="userId" column="USER_ID"/>
		<result property="partnerVerify" column="PARTNER_VERIFY"/>
		<result property="partnerWithdraw" column="PARTNER_WITHDRAW"/>
		<result property="shopLongAddr" column="SHOP_LONG_ADDR"/>
	</resultMap>
	
	<insert id="insertPartnerShop" useGeneratedKeys="true" keyProperty="shopNo" keyColumn="SHOP_NO">
		INSERT INTO SHOP VALUES(SEQ_SHOP.NEXTVAL, #{shopName}, #{shopShortAddr}, #{shopAddr}, #{shopTarget}, #{shopProduct}, #{shopType}, #{shopFileName}, #{shopFilePath}, #{shopFileSize}, #{shopUploadTime}, #{shopParking}, #{shopMaxReserv}, #{shopContent}, DEFAULT, DEFAULT, #{userNo}, #{startTime}, #{endTime}, #{shopPhone}, DEFAULT, #{shopLongAddr }, #{businessDay})
	</insert>
	
	<update id="updatePartnerShop">
		UPDATE SHOP SET SHOP_SHORT_ADDR=#{shopShortAddr}, SHOP_ADDR=#{shopAddr}, SHOP_LONG_ADDR=#{shopLongAddr}, 
            SHOP_TARGET=#{shopTarget}, SHOP_PRODUCT=#{shopProduct}, SHOP_PHONE=#{shopPhone}, SHOP_TYPE=#{shopType},
            BUSINESS_DAY=#{businessDay}, SHOP_CONTENT=#{shopContent},
			SHOP_FILENAME=#{shopFileName}, SHOP_FILEPATH=#{shopFilePath}, SHOP_FILESIZE=#{shopFileSize}, SHOP_UPLOADTIME=#{shopUploadTime}, 
			SHOP_PARKING_YN=#{shopParking}, SHOP_MAX_RESERVATION=#{shopMaxReserv}, START_TIME=#{startTime}, END_TIME= #{endTime} WHERE SHOP_NO = #{shopNo}
	</update>
	
	<!-- 메인 메뉴 테이블 -->
	<resultMap type="MainMenu" id="mainMenuResultMap">
		<id property="mainMenuNo" column="MAIN_MENU_NO"/>
		<result property="mainMenuName" column="MAIN_MENU_NAME"/>
		<result property="mainMenuPrice" column="MAIN_MENU_PRICE"/>
		<result property="shopNo" column="SHOP_NO"/>
	</resultMap>
	
	
	<!-- 메뉴 사진 테이블 -->
	<resultMap type="MenuPhoto" id="menuPhotoResultMap">
		<id property="menuFileNo" column="MENU_FILENO"/>
		<result property="menuFileName" column="MENU_FILENAME"/>
		<result property="menuFilePath" column="MENU_FILEPATH"/>
		<result property="menuFileSize" column="MENU_FILESIZE"/>
		<result property="menuUploadTime" column="MENU_UPLOADTIME"/>
		<result property="shopNo" column="SHOP_NO"/>
	</resultMap>
	
	<!-- 지도 지역별 리스트 -->
	<select id="selectAllList" parameterType="HashMap" resultMap="shopResultMap">
		SELECT SHOP_NO, SHOP_NAME, SHOP_ADDR, SHOP_SHORT_ADDR, SHOP_TARGET, SHOP_PRODUCT, SHOP_TYPE, SHOP_FILENAME, SHOP_PHONE, SHOP_PARKING_YN, SHOP_CONTENT, START_TIME, END_TIME, BUSINESS_DAY FROM SHOP WHERE SHOW_SHOP_YN = 'Y'
			<choose>
				<when test="location.equals('서울') || location.equals('부산') || location.equals('광주') || location.equals('대구') || location.equals('대전') || location.equals('세종') || location.equals('울산') || location.equals('인천') || location.equals('제주') || location.equals('강원') || location.equals('경기')">
					AND SHOP_ADDR LIKE '%' || #{ location } || '%' ORDER BY SHOP_NO DESC
				</when>
				<when test="location.equals('경북')">
				AND SHOP_ADDR LIKE '%' || #{ location } || '%'
				OR SHOP_ADDR LIKE '%' || '경상북도' || '%' ORDER BY SHOP_NO DESC
				</when>	
				<when test="location.equals('전남')">
					AND SHOP_ADDR LIKE '%' || #{ location } || '%'
					OR SHOP_ADDR LIKE '%' || '전라남도' || '%' ORDER BY SHOP_NO DESC
				</when>	
				<when test="location.equals('전북')">
					AND SHOP_ADDR LIKE '%' || #{ location } || '%'
					OR SHOP_ADDR LIKE '%' || '전라북도' || '%' ORDER BY SHOP_NO DESC
				</when>	
				<when test="location.equals('충남')">
					AND SHOP_ADDR LIKE '%' || #{ location } || '%'
					OR SHOP_ADDR LIKE '%' || '충청남도' || '%' ORDER BY SHOP_NO DESC
				</when>	
				<when test="location.equals('충북')">
					AND SHOP_ADDR LIKE '%' || #{ location } || '%'
					OR SHOP_ADDR LIKE '%' || '충청북도' || '%' ORDER BY SHOP_NO DESC
				</when>	
				<otherwise>
					ORDER BY SHOP_NO DESC
				</otherwise>
			</choose>
	</select>
	
	<!-- 지도 키워드 검색 출력 -->
	<select id="selectMapKeyword" resultMap="shopResultMap">
		SELECT SHOP_NO, SHOP_NAME, SHOP_ADDR, SHOP_SHORT_ADDR, SHOP_TARGET, SHOP_PRODUCT, SHOP_TYPE, SHOP_FILENAME, SHOP_PHONE, SHOP_PARKING_YN, SHOP_CONTENT, START_TIME, END_TIME, BUSINESS_DAY FROM SHOP WHERE SHOW_SHOP_YN = 'Y' AND (SHOP_ADDR LIKE '%' || #{searchKeyword } || '%' OR SHOP_NAME LIKE '%' || #{searchKeyword } || '%') ORDER BY SHOP_NO DESC
	</select>
	
	<!-- 가게 검색 테마 후기 랭킹 출력 -->
	<select id="selectShopRank" parameterType="HashMap" resultMap="shopResultMap">
		SELECT SHOP_NO, SHOP_NAME, SHOP_SHORT_ADDR, SHOP_TYPE, SHOP_FILENAME, SHOP_CONTENT, START_TIME, END_TIME, BUSINESS_DAY FROM SHOP WHERE SHOW_SHOP_YN = 'Y' AND SHOP_NO = #{ shopNo }
	</select>
	
	<!-- 가게 검색 테마 최신 등록순 출력 -->
	<select id="selectNewShop" resultMap="shopResultMap">
		SELECT * FROM (SELECT ROW_NUMBER() OVER (ORDER BY SHOP_NO DESC) AS NUM, SHOP_NO, SHOP_NAME, SHOP_SHORT_ADDR, SHOP_TYPE, SHOP_FILENAME, SHOP_CONTENT, START_TIME, END_TIME, BUSINESS_DAY FROM SHOP WHERE SHOW_SHOP_YN = 'Y') WHERE NUM BETWEEN 1 AND 10
	</select>
	
	<!-- 가게 검색 테마 출력 -->
	<select id="selectShopTheme" parameterType="HashMap" resultMap="shopResultMap">
		<if test="themeWord.equals('천안')">
			SELECT SHOP_NO, SHOP_NAME, SHOP_SHORT_ADDR, SHOP_TYPE, SHOP_FILENAME, SHOP_CONTENT, START_TIME, END_TIME, BUSINESS_DAY FROM SHOP
			WHERE SHOW_SHOP_YN = 'Y' AND SHOP_ADDR LIKE '%' || #{ themeWord } || '%' ORDER BY SHOP_NO DESC
		</if>	
		<if test="themeWord.equals('파스타')">
			SELECT DISTINCT(SHOP_NO), SHOP_NAME, SHOP_SHORT_ADDR, SHOP_TYPE, SHOP_FILENAME, SHOP_CONTENT, START_TIME, END_TIME, BUSINESS_DAY FROM SHOP FULL OUTER JOIN MAIN_MENU USING (SHOP_NO) WHERE (SHOP_NAME LIKE '%' || #{ themeWord } || '%' OR MAIN_MENU_NAME LIKE '%' || #{ themeWord } || '%')
		</if>	
		<if test="themeWord.equals('중식')">
			SELECT SHOP_NO, SHOP_NAME, SHOP_SHORT_ADDR, SHOP_TYPE, SHOP_FILENAME, SHOP_CONTENT, START_TIME, END_TIME, BUSINESS_DAY FROM SHOP
			WHERE SHOW_SHOP_YN = 'Y' AND SHOP_TYPE LIKE '%' || #{ themeWord } ORDER BY SHOP_NO DESC
		</if>	
		<if test="themeWord.equals('명동')">
			SELECT SHOP_NO, SHOP_NAME, SHOP_SHORT_ADDR, SHOP_TYPE, SHOP_FILENAME, SHOP_CONTENT, START_TIME, END_TIME, BUSINESS_DAY FROM SHOP
			WHERE SHOW_SHOP_YN = 'Y' AND SHOP_ADDR LIKE '%' || #{ themeWord } || '%' ORDER BY SHOP_NO DESC
		</if>	
		<if test="themeWord.equals('버거')">
			SELECT DISTINCT(SHOP_NO), SHOP_NAME, SHOP_SHORT_ADDR, SHOP_TYPE, SHOP_FILENAME, SHOP_CONTENT, START_TIME, END_TIME, BUSINESS_DAY FROM SHOP FULL OUTER JOIN MAIN_MENU USING (SHOP_NO) WHERE (SHOP_NAME LIKE '%' || #{ themeWord } || '%' OR MAIN_MENU_NAME LIKE '%' || #{ themeWord } || '%')
		</if>	
		<if test="themeWord.equals('제주')">
			SELECT SHOP_NO, SHOP_NAME, SHOP_SHORT_ADDR, SHOP_TYPE, SHOP_FILENAME, SHOP_CONTENT, START_TIME, END_TIME, BUSINESS_DAY FROM SHOP
			WHERE SHOW_SHOP_YN = 'Y' AND SHOP_ADDR LIKE '%' || #{ themeWord } || '%' ORDER BY SHOP_NO DESC
		</if>	
		<if test="themeWord.equals('카페')">
			SELECT DISTINCT(SHOP_NO), SHOP_NAME, SHOP_SHORT_ADDR, SHOP_TYPE, SHOP_FILENAME, SHOP_CONTENT, START_TIME, END_TIME, BUSINESS_DAY FROM SHOP FULL OUTER JOIN MAIN_MENU USING (SHOP_NO) WHERE SHOP_NAME LIKE '%' || #{ themeWord } || '%' OR MAIN_MENU_NAME LIKE '%' || '아메리카노' || '%'
		</if>	
		<if test="themeWord.equals('피자')">
			SELECT DISTINCT(SHOP_NO), SHOP_NAME, SHOP_SHORT_ADDR, SHOP_TYPE, SHOP_FILENAME, SHOP_CONTENT, START_TIME, END_TIME, BUSINESS_DAY FROM SHOP FULL OUTER JOIN MAIN_MENU USING (SHOP_NO) WHERE ((SHOP_NAME LIKE '%' || #{ themeWord } || '%' OR SHOP_NAME LIKE '%' || '파스타' || '%') OR (MAIN_MENU_NAME LIKE '%' || #{ themeWord } || '%' OR MAIN_MENU_NAME LIKE '%' || '파스타' || '%'))
		</if>	
		<if test="themeWord.equals('떡볶이')">
			SELECT DISTINCT(SHOP_NO), SHOP_NAME, SHOP_SHORT_ADDR, SHOP_TYPE, SHOP_FILENAME, SHOP_CONTENT, START_TIME, END_TIME, BUSINESS_DAY FROM SHOP FULL OUTER JOIN MAIN_MENU USING (SHOP_NO) WHERE (SHOP_TYPE LIKE '%' || '분식' || '%' OR SHOP_NAME LIKE '%' || #{ themeWord } || '%' OR MAIN_MENU_NAME LIKE '%' || #{ themeWord } || '%')
		</if>	
		<if test="themeWord.equals('초밥')">
			SELECT DISTINCT(SHOP_NO), SHOP_NAME, SHOP_SHORT_ADDR, SHOP_TYPE, SHOP_FILENAME, SHOP_CONTENT, START_TIME, END_TIME, BUSINESS_DAY FROM SHOP FULL OUTER JOIN MAIN_MENU USING (SHOP_NO) WHERE (SHOP_NAME LIKE '%' || #{ themeWord } || '%' OR MAIN_MENU_NAME LIKE '%' || #{ themeWord } || '%')
		</if>	
	</select>
	
	<!-- 가게 찾기 키워드 검색 출력 -->
	<select id="selectShopKey" resultMap="shopResultMap">
		SELECT SHOP_NO, SHOP_NAME, SHOP_SHORT_ADDR, SHOP_TYPE, SHOP_FILENAME, SHOP_CONTENT, START_TIME, END_TIME, BUSINESS_DAY FROM SHOP WHERE SHOW_SHOP_YN = 'Y' AND (SHOP_TYPE LIKE '%' || #{searchKeyword} || '%' OR SHOP_NAME LIKE '%' || #{searchKeyword } || '%')
	</select>
	
	<!-- 특정 가게 정보 출력 -->
	<select id="selectOne" resultMap="shopResultMap">
    	SELECT * FROM SHOP WHERE SHOP_NO = #{shopNo} 
    </select>
    
    <select id="selectOneUserNo" resultMap="shopResultMap">
    	SELECT * FROM SHOP WHERE USER_NO = #{userNo}
    </select>
	
	
	<!-- !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! -->
	<!-- 페이징 처리 - 갯수 카운트 -->
	<!-- 지도 지역별 리스트 갯수 카운트 -->
	<select id="selectListCount" parameterType="HashMap" resultType="_int">
		SELECT COUNT(*) FROM SHOP WHERE SHOW_SHOP_YN = 'Y'
			<choose>
				<when test="location.equals('서울') || location.equals('부산') || location.equals('광주') || location.equals('대구') || location.equals('대전') || location.equals('세종') || location.equals('울산') || location.equals('인천') || location.equals('제주') || location.equals('강원') || location.equals('경기')">
					AND SHOP_ADDR LIKE '%' || #{ location } || '%'
				</when>
				<when test="location.equals('경북')">
				AND SHOP_ADDR LIKE '%' || #{ location } || '%'
				OR SHOP_ADDR LIKE '%' || '경상북도' || '%'
				</when>	
				<when test="location.equals('전남')">
					AND SHOP_ADDR LIKE '%' || #{ location } || '%'
					OR SHOP_ADDR LIKE '%' || '전라남도' || '%'
				</when>	
				<when test="location.equals('전북')">
					AND SHOP_ADDR LIKE '%' || #{ location } || '%'
					OR SHOP_ADDR LIKE '%' || '전라북도' || '%' 
				</when>	
				<when test="location.equals('충남')">
					AND SHOP_ADDR LIKE '%' || #{ location } || '%'
					OR SHOP_ADDR LIKE '%' || '충청남도' || '%'
				</when>	
				<when test="location.equals('충북')">
					AND SHOP_ADDR LIKE '%' || #{ location } || '%'
					OR SHOP_ADDR LIKE '%' || '충청북도' || '%'
				</when>	
			</choose>
	</select>
	
	<!-- 지도 키워드 검색 출력 갯수 카운트 -->
	<select id="selectMapCountKey" resultType="_int">
		SELECT COUNT(*) FROM SHOP WHERE SHOW_SHOP_YN = 'Y' AND (SHOP_ADDR LIKE '%' || #{searchKeyword} || '%' OR SHOP_NAME LIKE '%' || #{searchKeyword } || '%')
	</select>
		
	<!-- 가게 검색 테마 출력 갯수 카운트 -->
	<select id="selectThemeCount" parameterType="HashMap" resultType="_int">
		<if test="themeWord.equals('천안')">
			SELECT COUNT(*) FROM SHOP
			WHERE SHOW_SHOP_YN = 'Y' AND SHOP_ADDR LIKE '%' || #{ themeWord } || '%' ORDER BY SHOP_NO DESC
		</if>	
		<if test="themeWord.equals('파스타')">
			SELECT COUNT(*) FROM (SELECT DISTINCT(SHOP_NO), SHOP_NAME, SHOP_SHORT_ADDR, SHOP_TYPE, SHOP_FILENAME, SHOP_CONTENT, START_TIME, END_TIME, BUSINESS_DAY FROM SHOP FULL OUTER JOIN MAIN_MENU USING (SHOP_NO) WHERE (SHOP_NAME LIKE '%' || #{ themeWord } || '%' OR MAIN_MENU_NAME LIKE '%' || #{ themeWord } || '%'))
		</if>	
		<if test="themeWord.equals('중식')">
			SELECT COUNT(*) FROM SHOP
			WHERE SHOW_SHOP_YN = 'Y' AND SHOP_TYPE LIKE '%' || #{ themeWord } ORDER BY SHOP_NO DESC
		</if>	
		<if test="themeWord.equals('명동')">
			SELECT COUNT(*) FROM SHOP
			WHERE SHOW_SHOP_YN = 'Y' AND SHOP_ADDR LIKE '%' || #{ themeWord } || '%' ORDER BY SHOP_NO DESC
		</if>	
		<if test="themeWord.equals('버거')">
			SELECT COUNT(*) FROM (SELECT DISTINCT(SHOP_NO), SHOP_NAME, SHOP_SHORT_ADDR, SHOP_TYPE, SHOP_FILENAME, SHOP_CONTENT, START_TIME, END_TIME, BUSINESS_DAY FROM SHOP FULL OUTER JOIN MAIN_MENU USING (SHOP_NO) WHERE (SHOP_NAME LIKE '%' || #{ themeWord } || '%' OR MAIN_MENU_NAME LIKE '%' || #{ themeWord } || '%'))
		</if>	
		<if test="themeWord.equals('제주')">
			SELECT COUNT(*) FROM SHOP
			WHERE SHOW_SHOP_YN = 'Y' AND SHOP_ADDR LIKE '%' || #{ themeWord } || '%' ORDER BY SHOP_NO DESC
		</if>	
		<if test="themeWord.equals('카페')">
			SELECT COUNT(*) FROM (SELECT DISTINCT(SHOP_NO), SHOP_NAME, SHOP_SHORT_ADDR, SHOP_TYPE, SHOP_FILENAME, SHOP_CONTENT, START_TIME, END_TIME, BUSINESS_DAY FROM SHOP FULL OUTER JOIN MAIN_MENU USING (SHOP_NO) WHERE SHOP_NAME LIKE '%' || #{ themeWord } || '%' OR MAIN_MENU_NAME LIKE '%' || '아메리카노' || '%')
		</if>	
		<if test="themeWord.equals('피자')">
			SELECT COUNT(*) FROM (SELECT DISTINCT(SHOP_NO), SHOP_NAME, SHOP_SHORT_ADDR, SHOP_TYPE, SHOP_FILENAME, SHOP_CONTENT, START_TIME, END_TIME, BUSINESS_DAY FROM SHOP FULL OUTER JOIN MAIN_MENU USING (SHOP_NO) WHERE (SHOP_NAME LIKE '%' || #{ themeWord } || '%' OR SHOP_NAME LIKE '%' || '파스타' || '%') OR (MAIN_MENU_NAME LIKE '%' || #{ themeWord } || '%' OR MAIN_MENU_NAME LIKE '%' || '파스타' || '%'))
		</if>	
		<if test="themeWord.equals('떡볶이')">
			SELECT COUNT(*) FROM (SELECT DISTINCT(SHOP_NO), SHOP_NAME, SHOP_SHORT_ADDR, SHOP_TYPE, SHOP_FILENAME, SHOP_CONTENT, START_TIME, END_TIME, BUSINESS_DAY FROM SHOP FULL OUTER JOIN MAIN_MENU USING (SHOP_NO) WHERE (SHOP_TYPE LIKE '%' || '분식' || '%' OR SHOP_NAME LIKE '%' || #{ themeWord } || '%' OR MAIN_MENU_NAME LIKE '%' || #{ themeWord } || '%'))
		</if>	
		<if test="themeWord.equals('초밥')">
			SELECT COUNT(*) FROM (SELECT DISTINCT(SHOP_NO), SHOP_NAME, SHOP_SHORT_ADDR, SHOP_TYPE, SHOP_FILENAME, SHOP_CONTENT, START_TIME, END_TIME, BUSINESS_DAY FROM SHOP FULL OUTER JOIN MAIN_MENU USING (SHOP_NO) WHERE (SHOP_NAME LIKE '%' || #{ themeWord } || '%' OR MAIN_MENU_NAME LIKE '%' || #{ themeWord } || '%'))
		</if>	
	</select>
	
	<!-- 가게 찾기 키워드 검색 출력 갯수 카운트 -->
	<select id="selectShopCountKey" resultType="_int">
		SELECT COUNT(*) FROM SHOP WHERE SHOW_SHOP_YN = 'Y' AND (SHOP_TYPE LIKE '%' || #{searchKeyword} || '%' OR SHOP_NAME LIKE '%' || #{searchKeyword } || '%')
	</select>	
	
	
	
	<!--  -->
	<!-- 가게 메인 메뉴 출력 -->
    <select id="selectShopMenu" resultMap="mainMenuResultMap">
       SELECT * FROM MAIN_MENU WHERE SHOP_NO = #{shopNo } ORDER BY MAIN_MENU_PRICE ASC
    </select>
    
    <!-- 가게 메인 메뉴 삭제 -->
    <select id="deleteShopMenu" resultMap="mainMenuResultMap">
       DELETE FROM MAIN_MENU WHERE SHOP_NO = #{shopNo }
    </select>
    
    <!-- 가게 메뉴 사진 출력 -->
    <select id="selectMenuPhoto" resultMap="menuPhotoResultMap">
       SELECT * FROM MENU_PHOTO WHERE SHOP_NO = #{shopNo }
    </select>
    
    <!-- 사진 이름으로 가게 메뉴 사진 경로 출력(서버에서 삭제하기 위해) -->
    <select id="selectMenuPhotoPath" resultMap="menuPhotoResultMap">
    	SELECT * FROM MENU_PHOTO WHERE MENU_FILENAME = #{menuFileName }
    </select>
    
    <!-- 가게 메뉴 사진 삭제 -->
    <select id="deleteMenuPhoto" resultMap="menuPhotoResultMap">
       DELETE FROM MENU_PHOTO WHERE MENU_FILENAME = #{menuFileName }
    </select>
    
    <!-- 가게 메뉴사진 저장 -->
	<insert id="insertMenuPhoto">
		INSERT INTO MENU_PHOTO VALUES(
            SEQ_MENU_PHOTO.NEXTVAL, #{menuFileName }, #{menuFilePath }, #{menuFileSize },
            #{menuUploadTime }, #{shopNo }
        )
	</insert>
	
	<!-- 가게 메인 메뉴 등록 -->
	<insert id="insertMainMenu">
		INSERT INTO MAIN_MENU VALUES(
            SEQ_MAIN_MENU.NEXTVAL, #{mainMenuName }, #{mainMenuPrice }, #{shopNo }
        )
	</insert>
	
	
	<!-- 관리자페이지 shop조회 -->
      <select id="selectAllShopDESC" resultMap="shopResultMap">
         SELECT SHOP.*,"USER".USER_ID, "USER".PARTNER_VERIFY, "USER". PARTNER_WITHDRAW FROM SHOP LEFT JOIN "USER" ON SHOP.USER_NO = "USER".USER_NO ORDER BY SHOP_NO DESC
      </select>
      <select id="selectAllShopASC" resultMap="shopResultMap">
         SELECT SHOP.*,"USER".USER_ID, "USER".PARTNER_VERIFY, "USER". PARTNER_WITHDRAW FROM SHOP LEFT JOIN "USER" ON SHOP.USER_NO = "USER".USER_NO ORDER BY SHOP_NO ASC
      </select>
	
		<select id="selectAdminPageList" resultType="_int">
         SELECT COUNT(*) FROM "SHOP"
      </select>
      <select id="selectThreeShop" parameterType="Shop" resultMap="shopResultMap">
          SELECT * FROM (SELECT ROW_NUMBER() OVER (ORDER BY SHOP_NO DESC) AS NUM,  SHOP_NO, SHOP_NAME, SHOP_SHORT_ADDR, SHOP_ADDR, SHOP_TARGET, SHOP_TYPE, SHOP_PARKING_YN, SHOP_MAX_RESERVATION,SHOP_PHONE, SHOW_SHOP_YN, "USER".USER_ID, "USER".PARTNER_VERIFY, "USER". PARTNER_WITHDRAW FROM SHOP LEFT JOIN "USER" ON SHOP.USER_NO = "USER".USER_NO) WHERE NUM BETWEEN 1 AND 3
      </select>
      
      <!-- 관리자페이지 사업자 목록노출, 환급신청 -->
	<update id="partnerUpdateShow">
		UPDATE SHOP SET SHOW_SHOP_YN = 'Y' WHERE SHOP_NO = #{shopNo }
	</update>
	
	
	
	
</mapper>