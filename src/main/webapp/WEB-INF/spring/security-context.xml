<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans"
  	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
           http://www.springframework.org/schema/security
           http://www.springframework.org/schema/security/spring-security.xsd">

	<context:component-scan base-package="com.donzzul.spring"/>
    <context:component-scan base-package="com.donzzul.spring.user"/>
    <context:component-scan base-package="com.donzzul.spring.user.service"/>
           
	<!-- 
	- auto-config='true'를 설정한것만으로 기본 로그인페이지/ http기본인증/로그아웃 기능들을 제공
	- use-expressions="true"는 SpEL을 사용한다는 뜻 
	 -->
	<http auto-config="true"  use-expressions="true">
		<!-- 해당 url에 접근하기 위한 접근권한 설정 -->
		<!-- 모두 허용 -->
		<intercept-url pattern="/" access="permitAll" /><!-- 메인 -->
		<intercept-url pattern="/resources/**" access="permitAll" />
		<!-- 꿈나무회원만 -->
		<intercept-url pattern="/dreamMyPage.dz" access="hasRole('ROLE_DREAM')" /> <!-- 꿈나무마이페이지 -->
		<intercept-url pattern="/allRListDetailByDream.dz" access="hasRole('ROLE_DREAM')" /> <!-- 꿈나무예약목록 -->
		<intercept-url pattern="/pickListByDream.dz" access="hasRole('ROLE_DREAM')" /> <!-- 꿈나무가고싶다목록 -->
		<intercept-url pattern="/allReviewListByDream.dz" access="hasRole('ROLE_DREAM')" /> <!-- 꿈나무감사후기목록 -->
		<intercept-url pattern="/allQnaListByDream.dz" access="hasRole('ROLE_DREAM')" /> <!-- 꿈나무문의글목록 -->
		<!-- 일반회원만 -->
		<intercept-url pattern="/mzMyPage.dz" access="hasAnyRole('ROLE_MZ', 'ROLE_SOCIAL')" /> <!-- 일반회원마이페이지 -->
		<intercept-url pattern="/mzReservationList.dz" access="hasAnyRole('ROLE_MZ', 'ROLE_SOCIAL')" /> <!-- 일반회원예약목록 -->
		<intercept-url pattern="/mzPickList.dz" access="hasAnyRole('ROLE_MZ', 'ROLE_SOCIAL')" /> <!-- 일반회원가고싶다 목록 -->
		<intercept-url pattern="/printDonAllList.dz" access="hasAnyRole('ROLE_MZ', 'ROLE_SOCIAL')" /> <!-- 일반돈쭐리스트 목록 -->
		<intercept-url pattern="/paymentFormView.dz" access="hasAnyRole('ROLE_MZ', 'ROLE_SOCIAL')" /> <!-- 돈쭐내기 페이지 -->
		<!-- 사업자회원만 -->
		<intercept-url pattern="/partnerMyPage.dz" access="hasRole('ROLE_PARTNER')" /> <!-- 사업자마이페이지 -->
		<intercept-url pattern="/refundsPartnerPoint.dz" access="hasRole('ROLE_PARTNER')" /> <!-- 사업자마이페이지 -->
		<intercept-url pattern="/partnerReserveList.dz" access="hasRole('ROLE_PARTNER')" /> <!-- 사업자마이페이지 -->
		<intercept-url pattern="/allQnaListByPartner.dz" access="hasRole('ROLE_PARTNER')" /> <!-- 사업자마이페이지 -->
		<!-- 회원만 -->
		<intercept-url pattern="/myINfo.dz" access="hasAnyRole('ROLE_DREAM', 'ROLE_MZ', 'ROLE_PARTNER')"  /> <!-- 회원탈퇴전 비밀번호 입력페이지 -->
		<intercept-url pattern="/userWritePwView.dz" access="hasAnyRole('ROLE_DREAM', 'ROLE_MZ', 'ROLE_PARTNER')"  /> <!-- 회원탈퇴전 비밀번호 입력페이지 -->
		<intercept-url pattern="/reservationView.dz" access="hasAnyRole('ROLE_DREAM', 'ROLE_MZ', 'ROLE_SOCIAL')" /> <!-- 예약페이지-> 꿈나무, 일반 -->
		<!-- 나머지는 모두 허용 -->
		<intercept-url pattern="/**" access="permitAll" /><!-- /**나머지는 ROLE_USER권한을 가진 사람만 허용 -->
		<!-- hasRole('ROLE_ADMIN')  hasRole('ROLE_USER')-->
		
		<form-login 
		login-page="/loginView.dz"                  
		username-parameter="username"    
		password-parameter="password"  
		always-use-default-target='false' 
		login-processing-url="/login"
		authentication-failure-url="/loginView.dz"
		authentication-success-handler-ref="loginSuccessHandler"
		/>
<!-- 		authentication-success-handler-ref="loginSuccessHandler" default-target-url="/"-->
		<!-- authentication-failure-handler-ref="loginFailureHandler" -->
		
		<access-denied-handler
    		error-page="/access_denied_page"
		/>

		<logout 
			invalidate-session="true" 
			logout-url="/logout.dz"  
			delete-cookies="true"
			logout-success-url="/" 
		/>  
		
		<!-- <remember-me 
			data-source-ref="dataSource" 
			remember-me-parameter="remember-me" 
	        token-validity-seconds="604800"
			authentication-success-handler-ref="loginSuccessHandler"
			/> --> <!-- 4 주 key="wmoskey" -->

		<!-- enable csrf protection 해킹막기 -->
		<csrf disabled="true"/>  
		
		<session-management>
			<concurrency-control max-sessions="1" expired-url="/oversession_denied_page"/>
		</session-management>


	</http>
	
	<!-- 인증처리를 위한 최상위 태그 -->
	<authentication-manager> 
		<!-- <authentication-provider ref="userAuthProvider"/> -->
	    <!-- 여기서 직접 주기 -->
	    <!-- <authentication-provider> 
		    <user-service> 
		    	<user name="admin" password="admin" authorities="ROLE_ADMIN" /> 
		    </user-service> 
	    </authentication-provider>  -->
	    
		<!-- 사용자 이름, 비밀번호를 제공해줄 서비스 등록 -->
 	    <!-- <authentication-provider user-service-ref="UserDetailsServiceImpl">  -->
<!-- 	    		<password-encoder ref="passwordEncoder"/> -->
	    <!-- </authentication-provider> -->
	    <!-- user-service-ref 는 디폴트 Provider에게 커스터마이징한 UserDetailsService를 주입해주기 위한 것이므로 삭제해도 됩니다. 
	    Provider를 우리가 직접 만들테니 해당 클래스 안에서 UserDetailsService Bean을 직접 주입받으면 되니까요. -->
	    <authentication-provider ref="userLoginAuthenticationProvider"/>

	</authentication-manager>	

	<!-- userService 빈등록 -->
	<beans:bean id="UserDetailsServiceImpl" class="com.donzzul.spring.user.service.UserDetailsServiceImpl">
		<!-- <property name="sqlsession" ref="sqlsession"/> -->
	</beans:bean>
	<beans:bean id="userLoginAuthenticationProvider" class="com.donzzul.spring.user.service.UserLoginAuthenticationProvider"/>
	<beans:bean id="bcryptPasswordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder" />
	
</beans:beans>
